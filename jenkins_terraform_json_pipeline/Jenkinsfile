import groovy.json.JsonSlurper

pipeline {
    agent any

    stages {
        stage('Terraform Deploy by Module') {
            steps {
                script {
                    // ‚úÖ Read and parse within same block
                    def jsonFile = readFile('jenkins_terraform_json_pipeline/config.json')
                    def jsonObj = new JsonSlurper().parseText(jsonFile)

                    def modules = jsonObj.modules
                    def instance_type = jsonObj.instance_type
                    def key_name = jsonObj.key_name
                    def owner = jsonObj.owner

                    modules.each { moduleName ->
                        def modulePath = "jenkins_terraform_json_pipeline/modules/${moduleName}"
                        echo "üîß Processing module: ${moduleName}"

                        if (fileExists("${modulePath}/main.tf")) {
                            dir(modulePath) {
                                catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {
                                    withEnv([
                                        "TF_VAR_instance_type=${instance_type}",
                                        "TF_VAR_key_name=${key_name}",
                                        "TF_VAR_owner=${owner}"
                                    ]) {
                                        bat "terraform init"
                                        bat "terraform apply -auto-approve"
                                    }
                                }
                            }
                        } else {
                            echo "‚ö†Ô∏è main.tf not found for module: ${moduleName}"
                        }
                    }
                }
            }
        }
    }

    post {
        always {
            echo "‚úÖ Pipeline Finished"
        }
    }
}
