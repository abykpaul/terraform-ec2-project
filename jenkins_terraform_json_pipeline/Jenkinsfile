import groovy.json.JsonSlurper

pipeline {
    agent any

    stages {
        stage('Deploy Modules') {
            steps {
                script {
                    // âœ… Read & extract only values; DO NOT keep LazyMap outside
                    def configText = readFile('jenkins_terraform_json_pipeline/config.json')
                    def config = new JsonSlurper().parseText(configText)

                    def modules = config.modules
                    def instanceType = config.instance_type.toString()
                    def keyName = config.key_name.toString()
                    def owner = config.owner.toString()

                    modules.each { moduleName ->
                        echo "ðŸ”§ Deploying Module: ${moduleName}"
                        def modulePath = "jenkins_terraform_json_pipeline/modules/${moduleName}"

                        dir(modulePath) {
                            catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {
                                withEnv([
                                    "TF_VAR_instance_type=${instanceType}",
                                    "TF_VAR_key_name=${keyName}",
                                    "TF_VAR_owner=${owner}"
                                ]) {
                                    bat "terraform init"
                                    bat "terraform apply -auto-approve"
                                }
                            }
                        }
                    }
                }
            }
        }
    }

    post {
        always {
            echo "ðŸ“¦ Pipeline completed"
        }
    }
}
