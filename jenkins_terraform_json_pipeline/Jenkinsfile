import groovy.json.JsonSlurper

pipeline {
    agent any

    stages {
        stage('Terraform Deployment') {
            steps {
                script {
                    // üü¢ Parse config file
                    def jsonText = readFile 'jenkins_terraform_json_pipeline/config.json'
                    def parsed = new JsonSlurper().parseText(jsonText)

                    // üü¢ Convert to serializable values (no LazyMap used outside script block)
                    def moduleList = parsed.modules.collect { it.toString() }  // ArrayList<String>
                    def instance_type = parsed.instance_type.toString()
                    def key_name = parsed.key_name.toString()
                    def owner = parsed.owner.toString()

                    // üü¢ Loop over modules with plain strings only
                    for (String module : moduleList) {
                        def tfVars = [
                            "TF_VAR_instance_type=${instance_type}",
                            "TF_VAR_key_name=${key_name}",
                            "TF_VAR_owner=${owner}"
                        ]

                        def path = "jenkins_terraform_json_pipeline/modules/${module}"
                        echo "‚öôÔ∏è Running Terraform for module: ${module}"

                        dir(path) {
                            catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {
                                withEnv(tfVars) {
                                    bat "terraform init"
                                    bat "terraform apply -auto-approve"
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}
