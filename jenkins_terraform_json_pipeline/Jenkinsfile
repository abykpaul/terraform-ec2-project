pipeline {
    agent any

    environment {
        ENV         = ''
        REGION      = ''
        INSTANCE    = ''
        KEY_NAME    = ''
        OWNER       = ''
    }

    stages {
        stage('Read and Parse JSON') {
            steps {
                script {
                    // Read and parse the config.json
                    def jsonText = readFile('config.json')
                    def config = new groovy.json.JsonSlurper().parseText(jsonText)

                    // Assign top-level values to env vars
                    env.ENV      = config.env
                    env.REGION   = config.region
                    env.INSTANCE = config.vars.instance_type
                    env.KEY_NAME = config.vars.key_name
                    env.OWNER    = config.vars.owner

                    // Store modules array in a local variable (cannot persist across stages)
                    modulesList = config.modules

                    // Print values
                    echo "üîç ENV      : ${env.ENV}"
                    echo "üåç REGION   : ${env.REGION}"
                    echo "üì¶ INSTANCE : ${env.INSTANCE}"
                    echo "üîë KEY_NAME : ${env.KEY_NAME}"
                    echo "üë§ OWNER    : ${env.OWNER}"
                    echo "üìÅ MODULES  : ${modulesList}"
                }
            }
        }

        stage('Process Modules') {
            steps {
                script {
                    // Re-read JSON to access modules array in this stage
                    def modules = new groovy.json.JsonSlurper().parseText(readFile('config.json')).modules

                    echo "üîÅ Looping through modules..."
                    for (m in modules) {
                        echo "‚úÖ Running Terraform for module: ${m}"
                        // Here you could do:
                        // sh "terraform apply -var-file=configs/${m}-${env.ENV}.tfvars"
                    }
                }
            }
        }

        stage('Run Deployment') {
            steps {
                script {
                    echo "üöÄ Deploying infrastructure in ${env.REGION} with instance type ${env.INSTANCE}"
                    // Example: sh "terraform apply -var region=${env.REGION} -var instance_type=${env.INSTANCE}"
                }
            }
        }
    }
}
