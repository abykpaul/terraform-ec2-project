import groovy.json.JsonSlurper

pipeline {
    agent any

    stages {
        stage('Terraform Deploy') {
            steps {
                script {
                    // âœ… Parse config.json
                    def configText = readFile 'jenkins_terraform_json_pipeline/config.json'
                    def jsonMap = new JsonSlurper().parseText(configText)

                    // âœ… Extract as plain values (no LazyMap used outside)
                    def modules = jsonMap.modules.collect { it.toString() }
                    def tfVars = [
                        "TF_VAR_instance_type=${jsonMap.instance_type}",
                        "TF_VAR_key_name=${jsonMap.key_name}",
                        "TF_VAR_owner=${jsonMap.owner}"
                    ]

                    // âœ… Loop through each module and apply
                    for (String module in modules) {
                        def path = "jenkins_terraform_json_pipeline/modules/${module}"
                        echo "ðŸš€ Deploying Terraform module: ${module}"

                        dir(path) {
                            catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {
                                withEnv(tfVars) {
                                    bat "terraform init"
                                    bat "terraform apply -auto-approve"
                                }
                            }
                        }
                    }
                }
            }
        }
    }

    post {
        always {
            echo "âœ… All steps completed!"
        }
    }
}
